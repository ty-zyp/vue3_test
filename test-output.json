{"numTotalTestSuites":20,"numPassedTestSuites":20,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":24,"numPassedTests":24,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1704792351523,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","mock api"],"fullName":" mock api mock async service in global scope","status":"passed","title":"mock async service in global scope","duration":1,"failureMessages":[]}],"startTime":1704792356494,"endTime":1704792356495,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/api.spec.ts"},{"assertionResults":[{"ancestorTitles":["","axios-tets"],"fullName":" axios-tets tets1","status":"passed","title":"tets1","duration":18,"failureMessages":[]},{"ancestorTitles":["","axios-tets"],"fullName":" axios-tets test2","status":"passed","title":"test2","duration":3,"failureMessages":[]}],"startTime":1704792356841,"endTime":1704792356862,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/api1.spec.ts"},{"assertionResults":[],"startTime":1704792351523,"endTime":1704792351523,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/bench.spec.ts"},{"assertionResults":[{"ancestorTitles":["","common.ts"],"fullName":" common.ts adds 1 + 2 to equal 3","status":"skipped","title":"adds 1 + 2 to equal 3","failureMessages":[]},{"ancestorTitles":["","common.ts"],"fullName":" common.ts compose函数 3 equal 5.5","status":"skipped","title":"compose函数 3 equal 5.5","failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test 获取接口数据","status":"passed","title":"获取接口数据","duration":2,"failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test common 2","status":"passed","title":"common 2","duration":1,"failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test common 3","status":"passed","title":"common 3","duration":1,"failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test common 4","status":"passed","title":"common 4","duration":0,"failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test common快照-1","status":"passed","title":"common快照-1","duration":2,"failureMessages":[]},{"ancestorTitles":["","api-test"],"fullName":" api-test common内联快照-1","status":"passed","title":"common内联快照-1","duration":1,"failureMessages":[]}],"startTime":1704792356418,"endTime":1704792356425,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/common.spec.ts"},{"assertionResults":[{"ancestorTitles":["","HelloWorld"],"fullName":" HelloWorld renders properly","status":"passed","title":"renders properly","duration":16,"failureMessages":[]}],"startTime":1704792356576,"endTime":1704792356592,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/HelloWorld.spec.ts"},{"assertionResults":[{"ancestorTitles":["","reading messages"],"fullName":" reading messages should get the latest message with a spy","status":"passed","title":"should get the latest message with a spy","duration":2,"failureMessages":[]},{"ancestorTitles":["","reading messages"],"fullName":" reading messages should get with a mock","status":"passed","title":"should get with a mock","duration":1,"failureMessages":[]},{"ancestorTitles":["","purchasing flow"],"fullName":" purchasing flow allows purchases within business hours","status":"passed","title":"allows purchases within business hours","duration":1,"failureMessages":[]},{"ancestorTitles":["","purchasing flow"],"fullName":" purchasing flow disallows purchases outside of business hours","status":"passed","title":"disallows purchases outside of business hours","duration":1,"failureMessages":[]},{"ancestorTitles":["","mock function test"],"fullName":" mock function test mock 对象","status":"passed","title":"mock 对象","duration":0,"failureMessages":[]},{"ancestorTitles":["","mock function test"],"fullName":" mock function test toHaveReturnedWith","status":"passed","title":"toHaveReturnedWith","duration":1,"failureMessages":[]},{"ancestorTitles":["","mock function test"],"fullName":" mock function test promise resolve","status":"passed","title":"promise resolve","duration":1,"failureMessages":[]},{"ancestorTitles":["","mock function test"],"fullName":" mock function test timers","status":"passed","title":"timers","duration":0,"failureMessages":[]}],"startTime":1704792356192,"endTime":1704792356199,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/mock.spec.ts"},{"assertionResults":[{"ancestorTitles":["","Notification.vue"],"fullName":" Notification.vue renders the correct style for error","status":"passed","title":"renders the correct style for error","duration":16,"failureMessages":[]}],"startTime":1704792356620,"endTime":1704792356636,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/notification.test.ts"},{"assertionResults":[{"ancestorTitles":[""],"fullName":" toUpperCase","status":"passed","title":"toUpperCase","duration":4,"failureMessages":[]}],"startTime":1704792356648,"endTime":1704792356652,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/snapeShot.spec.ts"},{"assertionResults":[{"ancestorTitles":[""],"fullName":" my types work properly","status":"passed","title":"my types work properly","duration":1,"failureMessages":[]}],"startTime":1704792356379,"endTime":1704792356380,"status":"passed","message":"","name":"D:/test/vue3_test/src/components/__tests__/type.spec.ts"},{"assertionResults":[{"ancestorTitles":[""],"fullName":" add","status":"passed","title":"add","duration":1,"failureMessages":[]}],"startTime":1704792356524,"endTime":1704792356525,"status":"passed","message":"","name":"D:/test/vue3_test/src/assets/common.ts"}]}